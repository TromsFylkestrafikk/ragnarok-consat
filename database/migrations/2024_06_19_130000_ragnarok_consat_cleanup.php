<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('consat_call_details', function (Blueprint $table) {
            $table->dropColumn('event_type');
        });

        Schema::table('consat_passenger_count', function (Blueprint $table) {
            // $table->dropPrimary(['date', 'id']);
            $table->dropColumn('id');
        });

        Schema::table('consat_planned_journeys', function (Blueprint $table) {
            $table->dateTime('journey_start')->nullable()->comment('Planned start time of journey. Time is in local timezone');
            $table->dateTime('journey_end')->nullable()->comment('Planned end time of journey. Time is in local timezone');
            $table->char('direction')->nullable()->comment('Direction code of journey. Inbound or Outbound.');
        });

        Schema::drop('consat_destinations');
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('consat_call_details', function (Blueprint $table) {
            $table->unsignedTinyInteger('event_type')->nullable()->after('call_id')->comment('Event type ID');
        });

        Schema::table('consat_passenger_count', function (Blueprint $table) {
            $table->unsignedBigInteger('id')->first()->comment('Journey ID generated by Consat');
        });

        Schema::create('consat_destinations', function (Blueprint $table) {
            $table->date('date')->comment('Date for destination. Required join with other tables');
            $table->unsignedBigInteger('id')->comment('Consat internal ID.');
            $table->char('external_id', 64)->comment('NeTEx variant of destination ID (Or Regtopp for old sets)');
            $table->string('destination', 128)->comment('Name of destination');

            $table->primary(['date', 'id']);
        });
    }
};
